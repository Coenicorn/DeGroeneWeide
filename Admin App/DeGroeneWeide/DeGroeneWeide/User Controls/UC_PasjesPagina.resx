<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_refresh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>